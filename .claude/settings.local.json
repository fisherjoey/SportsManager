{
  "includeCoAuthoredBy": false,
  "permissions": {
    "allow": [
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 101 -- su - runner -c \"\"ssh -i ~/.ssh/id_rsa root@10.0.0.5 hostname\"\"')",
      "Bash(git commit -m \"fix: Remove environment gate to allow direct deployment\")",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 101 -- bash -c \"\"journalctl -u actions.runner.fisherjoey-SportsManager.ct101-sports-runner --since \\\"\"30 seconds ago\\\"\" | tail -50\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 101 -- bash -c \"\"ls -lt /opt/actions-runner-sports/_diag/Worker_*.log | head -1 | awk ''''{print \\$NF}''''\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 101 -- bash -c \"\"\"\"grep -A 10 \\\"\"\"\"Create database backup\\\"\"\"\" /opt/actions-runner-sports/_diag/Worker_*.log | tail -1 | head -50\"\"\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 101 -- bash -c \"\"\"\"cat /opt/actions-runner-sports/_diag/Worker_20251019-220145-utc.log\"\"\"\" | grep -A 30 \"\"\"\"Create database backup\"\"\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 101 -- bash -c \"\"cat /opt/actions-runner-sports/_diag/Worker_20251019-220145-utc.log\"\" | grep -A 5 \"\"exit code\"\" | head -20')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 101 -- bash -c \"\"\"\"cat /opt/actions-runner-sports/_diag/Worker_20251019-220145-utc.log\"\"\"\" | grep -B 5 \"\"\"\"exit code 1\"\"\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 101 -- bash -c \"\"\"\"cat /opt/actions-runner-sports/_diag/Worker_20251019-220145-utc.log\"\"\"\" | grep -B 80 \"\"\"\"2d61e509-60f2-47eb-90d1-e88c9004731f\"\"\"\" | grep \"\"\"\"displayName\"\"\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 101 -- bash -c \"\"cat /opt/actions-runner-sports/_diag/Worker_20251019-220145-utc.log\"\" | grep -A 2 \"\"Processing step:\"\" | tail -40')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- bash -c \"\"cd /root/SportsManager && git status\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- bash -c \"\"cd /root/SportsManager && git log --oneline -1\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- bash -c \"\"docker exec -e PGPASSWORD=postgres123 sportsmanager-postgres pg_dump -U postgres -d sports_management --data-only --inserts -f /tmp/seed_data.sql\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- bash -c \"\"docker cp sportsmanager-postgres:/tmp/seed_data.sql /root/seed_data.sql\"\"')",
      "Bash(scp -i ~/.ssh/id_rsa root@10.0.0.5:/root/seed_data.sql ./deployment/seed-data/seed_data.sql)",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- bash -c \"\"cp /root/seed_data.sql /root/SportsManager/deployment/\"\"')",
      "Bash(scp -i ~/.ssh/id_rsa root@10.0.0.5:/root/SportsManager/deployment/seed_data.sql ./deployment/seed-data/seed_data.sql)",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- bash -c \"\"ls -lh /root/seed_data.sql\"\"')",
      "Bash(git add deployment/seed-data/)",
      "Bash(git commit -m \"feat: Add production database seed data for local development\n\nExported production database as seed data (134KB, 1179 lines) to help\ndevelopers get started with realistic test data.\n\nIncludes:\n- Referee levels (Rookie, Junior, Senior)\n- Roles (Super Admin, Admin, Assignment Manager, etc.)\n- Test users with various roles (password: Admin123!)\n- Organizations, teams, games, referees\n- Financial data, settings, locations\n\nThis seed data will be used for:\n- Local development (docker-compose.local.yml)\n- Developer onboarding\n- Testing with realistic data\n\nTest accounts:\n- admin@sportsmanager.com (Super Admin)\n- admin@cmba.ca (Admin)\n- assignor@cmba.ca (Assignment Manager)\n- coordinator@cmba.ca (Referee Coordinator)\")",
      "Bash(git checkout -b develop)",
      "Bash(git merge feat/auth-bypass-figma-scraping -m \"feat: Merge seed data and workflow fixes to develop branch\")",
      "Bash(git push -u origin develop)",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- bash -c \"\"cd /root/SportsManager && git fetch --all && git checkout -b develop origin/develop\"\"')",
      "Bash(git add backend/Dockerfile.dev frontend/Dockerfile.dev deployment/docker-compose.local.yml deployment/.env.local.example deployment/README.local.md)",
      "Bash(git commit -m \"feat: Add complete local development environment with hot-reload\n\nCreated a full local development setup that developers can start with a\nsingle command. Includes hot-reload for both frontend and backend.\n\nNew files:\n- backend/Dockerfile.dev: Backend container with nodemon hot-reload\n- frontend/Dockerfile.dev: Frontend container with Next.js dev mode\n- deployment/docker-compose.local.yml: Full local stack (Postgres, Cerbos, Backend, Frontend)\n- deployment/.env.local.example: Environment variable template\n- deployment/README.local.md: Complete setup and troubleshooting guide\n\nFeatures:\n- One-command startup: docker-compose -f docker-compose.local.yml up\n- Auto-loads production seed data (134KB, test users included)\n- Hot-reload: Changes to src/ files auto-restart/refresh\n- Exposed ports: Frontend (3000), Backend (3001), Postgres (5432), Cerbos (3592/3593)\n- Includes test credentials (password: Admin123!)\n\nDeveloper workflow:\n1. Clone repo and checkout develop\n2. cd deployment && docker-compose -f docker-compose.local.yml up\n3. Edit code in backend/src/ or frontend/src/\n4. Changes automatically reload\n5. Test at http://localhost:3000\")",
      "Bash(git add .github/workflows/deploy-development.yml)",
      "Bash(git commit -m \"feat: Add CI/CD workflow for development environment\n\nCreated automated deployment pipeline for develop branch that deploys\nto dev.syncedsport.com on every push.\n\nWorkflow features:\n- Auto-deploys on push to develop branch\n- Manual trigger support (workflow_dispatch)\n- Smart migration detection (only runs if migrations changed)\n- Health checks for backend and frontend\n- Cloudflare Tunnel verification\n- Detailed deployment summary\n- Automatic rollback logging on failure\n\nDeployment targets:\n- Dev URL: https://dev.syncedsport.com\n- Backend: CT102 port 3002\n- Frontend: CT102 port 3005\n- Uses docker-compose.dev.yml\n\nThis enables the workflow:\nfeature/* → develop (auto-deploy to dev.syncedsport.com)\ndevelop → main (auto-deploy to syncedsport.com)\")",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- bash -c \"\"ls -la /root/SportsManager/deployment/docker-compose.dev.yml\"\"')",
      "Bash(git add deployment/docker-compose.dev.yml)",
      "Bash(git commit -m \"feat: Add docker-compose.dev.yml for development server deployment\n\nAdded development environment compose file that runs on CT102 alongside\nproduction. This enables dev.syncedsport.com to track the develop branch.\n\nConfiguration:\n- Backend-dev: Port 3002, uses sports_management_dev database\n- Frontend-dev: Port 3005, points to dev.syncedsport.com API\n- Auth bypass enabled (DISABLE_AUTH: true) for Figma scraping/testing\n- Shares postgres and cerbos with production via external network\n- Separate database (sports_management_dev) from production\n\nEnvironment URLs:\n- Production: https://syncedsport.com (ports 3001/3004)\n- Development: https://dev.syncedsport.com (ports 3002/3005)\n\nThis completes the git workflow:\n- feature/* → develop → deploy to dev.syncedsport.com\n- develop → main → deploy to syncedsport.com\")",
      "Bash(git push origin develop)",
      "Bash(git add docs/)",
      "Bash(git commit -m \"docs: Add comprehensive developer documentation\n\nCreated three detailed documentation files for the development team:\n\n1. DEVELOPER_SETUP.md\n   - Quick 5-minute setup guide\n   - Prerequisites and installation\n   - Test credentials and login\n   - Common issues and solutions\n\n2. LOCAL_DEVELOPMENT.md\n   - Comprehensive local dev guide\n   - Architecture overview\n   - Hot-reload development details\n   - Database management (migrations, seeds, backups)\n   - Testing and debugging guides\n   - Performance optimization tips\n   - Extensive troubleshooting section\n\n3. WORKFLOW.md\n   - Git branching strategy (feature → develop → main)\n   - Pull request process and templates\n   - Automatic deployment details\n   - Environment comparison (prod, dev, local)\n   - Best practices and checklists\n   - Emergency procedures (hotfix, rollback)\n   - Monitoring and health checks\n\nThese docs enable the 5-person team to:\n- Onboard new developers in 5 minutes\n- Understand the complete git → CI/CD workflow\n- Troubleshoot common issues independently\n- Follow consistent development practices\")",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 101 -- bash -c \"\"journalctl -u actions.runner.fisherjoey-SportsManager.ct101-sports-runner --since \\\"\"30 minutes ago\\\"\" | grep -E \\\"\"(Running job|completed with result)\\\"\"\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 101 -- journalctl -u actions.runner.fisherjoey-SportsManager.ct101-sports-runner --since \"\"\"\"30 minutes ago\"\"\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 101 -- journalctl -u actions.runner.fisherjoey-SportsManager.ct101-sports-runner --since \"\"\"\"1 hour ago\"\"\"\" --no-pager')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 101 -- bash -c \"\"ls -lt /opt/actions-runner-sports/_diag/Worker_*.log | head -1 | cut -d\\\"\" \\\"\" -f9\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 101 -- grep -E \"\"\"\"(Pull latest|Rebuild|error|Error|failed)\"\"\"\" /opt/actions-runner-sports/_diag/Worker_20251020-014046-utc.log')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 101 -- grep -A 5 \"\"\"\"exit code\"\"\"\" /opt/actions-runner-sports/_diag/Worker_20251020-014046-utc.log')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 101 -- grep -B 10 \"\"\"\"exit code 1\"\"\"\" /opt/actions-runner-sports/_diag/Worker_20251020-014046-utc.log')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- bash -c \"\"cd /root/SportsManager && git status && echo --- && git log --oneline -3\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- bash -c \"\"cd /root/SportsManager && git fetch --all && git pull origin develop\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- bash -c \"\"cd /root/SportsManager && rm -f deployment/docker-compose.dev.yml deployment/seed_data.sql deployment/docker-compose.all.yml deployment/docker-compose.deploy.yml.patch\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- bash -c \"\"cd /root/SportsManager && git pull origin develop\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 101 -- journalctl -u actions.runner.fisherjoey-SportsManager.ct101-sports-runner --since \"\"\"\"30 seconds ago\"\"\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 101 -- bash -c \"\"ls -lt /opt/actions-runner-sports/_diag/Worker_*.log | head -1 | awk ''''{print \\$9}''''\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 101 -- bash -c \"\"ls -lt /opt/actions-runner-sports/_diag/Worker_*.log | head -1\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 101 -- cat /opt/actions-runner-sports/_diag/Worker_20251020-022031-utc.log')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- bash -c \"\"cd /root/SportsManager/deployment && docker compose -f docker-compose.dev.yml up -d --build\"\"')",
      "Bash(git commit -m \"fix: Use Dockerfile.dev for development containers\n\nChanged docker-compose.dev.yml to use Dockerfile.dev instead of the\nmulti-stage production Dockerfile. This fixes the npm ci error that\nwas failing because package-lock.json is out of sync.\n\nDockerfile.dev uses ''npm install'' which is more flexible for\ndevelopment and doesn''t require perfect lock file sync.\")",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 101 -- journalctl -u actions.runner.fisherjoey-SportsManager.ct101-sports-runner --since \"\"\"\"1 minute ago\"\"\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 101 -- journalctl -u actions.runner.fisherjoey-SportsManager.ct101-sports-runner --since \"\"\"\"5 minutes ago\"\"\"\" --no-pager')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 101 -- systemctl status actions.runner.fisherjoey-SportsManager.ct101-sports-runner')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- bash -c \"\"\"\"cd /root/SportsManager/deployment && docker compose -f docker-compose.dev.yml up -d --build\"\"\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- docker ps')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- docker ps -a')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- bash -c \"\"cd /root/SportsManager/deployment && docker compose -f docker-compose.dev.yml ps\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- docker images')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- bash -c \"\"\"\"cd /root/SportsManager/deployment && docker compose -f docker-compose.dev.yml down && docker compose -f docker-compose.dev.yml build --no-cache backend-dev\"\"\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- bash -c \"\"cd /root/SportsManager/deployment && docker compose -f docker-compose.dev.yml up -d\"\"')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- docker network ls')",
      "Bash(git commit -m \"fix: Use correct network name for dev environment\n\nThe production docker-compose creates a network named\ndeployment_sportsmanager-network (with deployment_ prefix), but\ndocker-compose.dev.yml was looking for just sportsmanager-network.\n\nUpdated to reference the correct external network name.\")",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- bash -c \"\"cd /root/SportsManager && git pull origin develop && cd deployment && docker compose -f docker-compose.dev.yml up -d\"\"')",
      "Bash(curl -f https://dev.syncedsport.com)",
      "Bash(curl -f https://dev.syncedsport.com/api/health)",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- docker logs sportsmanager-backend-dev --tail 50')",
      "Bash(ssh -i ~/.ssh/id_rsa root@10.0.0.5 'pct exec 102 -- docker exec sportsmanager-backend-dev printenv | grep DISABLE_AUTH')",
      "Bash(git add -A)",
      "Bash(git commit -m \"test: Verify CI/CD pipeline works after fixes\")"
    ],
    "deny": [],
    "ask": []
  }
}
