{
  "includeCoAuthoredBy": false,
  "permissions": {
    "allow": [
      "Read(//c/Program Files/PostgreSQL//**)",
      "Bash(\"/c/Program Files/PostgreSQL/17/bin/psql\" --version)",
      "Bash(\"/c/Program Files/PostgreSQL/17/bin/psql\" -U postgres -h localhost -c \"ALTER USER postgres WITH PASSWORD ''postgres123'';\")",
      "mcp__ide__getDiagnostics",
      "Bash(\"/c/Program Files/PostgreSQL/17/bin/psql\" -U postgres -h localhost -c \"SELECT 1;\")",
      "Bash(cat:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(taskkill:*)",
      "Bash(curl:*)",
      "Bash(pip install:*)",
      "Bash(npm install:*)",
      "Bash(chrome-devtools-mcp:*)",
      "Bash(chrome-devtools-mcp.exe connect:*)",
      "Bash(./chrome-devtools-mcp.exe connect --url http://localhost:3000)",
      "Bash(node:*)",
      "Bash(start chrome:*)",
      "Bash(tasklist)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(./chrome-devtools-mcp.exe connect --url http://localhost:3000/?view=dashboard)",
      "Bash(npm run dev:*)",
      "Bash(npx ts-node:*)",
      "Bash(cmd /c:*)",
      "Bash(python:*)",
      "Bash(git fetch:*)",
      "Bash(git checkout:*)",
      "Bash(git pull:*)",
      "Bash(git push:*)",
      "Bash(git worktree:*)",
      "Bash(npm run migrate:*)",
      "Bash(npm run build:*)",
      "Bash(sqlite3:*)",
      "Bash(set PORT=3003)",
      "Bash(npx:*)",
      "Bash(pkill:*)",
      "Bash(./chrome-devtools-mcp.exe connect --url http://localhost:3005)",
      "Bash(npm start)",
      "Bash(npm run start:*)",
      "Read(//c/Users/School/OneDrive/Desktop/**)",
      "Bash(xargs:*)",
      "Bash(npm run dev:js:*)",
      "Bash(npm run list:*)",
      "Bash(npm run:*)",
      "Bash(\"/c/Program Files/PostgreSQL/17/bin/psql\" -U postgres -h localhost -d sports_management -f /c/Users/School/OneDrive/Desktop/SportsManager-pre-typescript/backend/migrations/20250926000001_add_multi_tenancy.sql)",
      "Bash(PGPASSWORD=postgres123 \"/c/Program Files/PostgreSQL/17/bin/psql\" -U postgres -h localhost -d sports_management -f 20250926000001_add_multi_tenancy.sql)",
      "Bash(PGPASSWORD=postgres123 \"/c/Program Files/PostgreSQL/17/bin/psql\" -U postgres -h localhost -d sports_management -f 20250926000002_seed_default_organization.sql)",
      "Bash(PGPASSWORD=postgres123 \"/c/Program Files/PostgreSQL/17/bin/psql\" -U postgres -h localhost -d sports_management -c \"SELECT id, name, slug FROM organizations; SELECT COUNT(*) as user_count FROM users WHERE organization_id IS NOT NULL; SELECT COUNT(*) as game_count FROM games WHERE organization_id IS NOT NULL;\")",
      "Bash(npm test:*)",
      "Bash(docker-compose:*)",
      "Bash(docker compose:*)",
      "Bash(npm uninstall:*)",
      "Bash(find:*)",
      "Bash(where docker)",
      "Bash(powershell:*)",
      "Bash(docker logs:*)",
      "Bash(rm:*)",
      "Bash(rmdir:*)",
      "Bash(docker restart:*)",
      "Bash(git restore:*)",
      "Bash(PGPASSWORD=postgres123 \"/c/Program Files/PostgreSQL/17/bin/psql\" -U postgres -h localhost -d sports_management -c \"\\dt\")",
      "Bash(PGPASSWORD=postgres123 \"/c/Program Files/PostgreSQL/17/bin/psql\" -U postgres -h localhost -d sports_management -c \"SELECT id, email, password_hash FROM users WHERE email = ''admin@refassign.com'' LIMIT 1;\")",
      "Bash(PGPASSWORD=postgres123 \"/c/Program Files/PostgreSQL/17/bin/psql\" -U postgres -h localhost -d sports_management -c \"SELECT email FROM users LIMIT 5;\")",
      "Bash(PGPASSWORD=postgres123 \"/c/Program Files/PostgreSQL/17/bin/psql\" -U postgres -h localhost -d sports_management -c \"SELECT COUNT(*) FROM game_assignments LIMIT 5;\")",
      "Bash(PGPASSWORD=postgres123 \"/c/Program Files/PostgreSQL/17/bin/psql\" -U postgres -h localhost -d sports_management -c \"SELECT table_name FROM information_schema.tables WHERE table_schema = ''public'' AND table_name IN (''game_assignments'', ''games'', ''users'', ''positions'', ''teams'', ''referee_levels'') ORDER BY table_name;\")",
      "Bash(PGPASSWORD=postgres123 \"/c/Program Files/PostgreSQL/17/bin/psql\" -U postgres -h localhost -d sports_management -c \"\\d game_assignments\")",
      "Bash(PGPASSWORD=postgres123 \"/c/Program Files/PostgreSQL/17/bin/psql\" -U postgres -h localhost -d sports_management -c \"\\d games\")",
      "Bash(awk:*)",
      "Bash(for file in teams.ts leagues.ts locations.ts)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(head:*)",
      "Bash(done)",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIzYjViOTRmMy1hNzAwLTRjNTktYTI5Ny01ZGNiNTQzZDM3MmQiLCJlbWFpbCI6ImFkbWluQHJlZmFzc2lnbi5jb20iLCJyb2xlcyI6WyJhZG1pbiJdLCJvcmdhbml6YXRpb25JZCI6IjAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCIsInJlZ2lvbklkcyI6W10sInBlcm1pc3Npb25zIjpbXSwiaWF0IjoxNzU4OTQ1MzYyLCJleHAiOjE3NTg5NDg5NjJ9.YHevcRdnbbIn4aZkuEmhQIrbLXHJ_8MUG5ucqiigonA\")",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIzYjViOTRmMy1hNzAwLTRjNTktYTI5Ny01ZGNiNTQzZDM3MmQiLCJlbWFpbCI6ImFkbWluQHJlZmFzc2lnbi5jb20iLCJyb2xlcyI6WyJhZG1pbiJdLCJvcmdhbml6YXRpb25JZCI6IjAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCIsInJlZ2lvbklkcyI6W10sInBlcm1pc3Npb25zIjpbXSwiaWF0IjoxNzU4OTU0Nzg3LCJleHAiOjE3NTg5NTgzODd9.c0GGAIKPFWo-TRvfVa6Apk7ClsqZ7gQpoZC7lGrJZuQ\")",
      "Bash(PGPASSWORD=postgres123 \"/c/Program Files/PostgreSQL/17/bin/psql\" -U postgres -h localhost -d sports_management -c \"\\d teams\")",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIzYjViOTRmMy1hNzAwLTRjNTktYTI5Ny01ZGNiNTQzZDM3MmQiLCJlbWFpbCI6ImFkbWluQHJlZmFzc2lnbi5jb20iLCJyb2xlcyI6WyJhZG1pbiJdLCJvcmdhbml6YXRpb25JZCI6IjAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCIsInJlZ2lvbklkcyI6W10sInBlcm1pc3Npb25zIjpbXSwiaWF0IjoxNzU4OTU4NTQ3LCJleHAiOjE3NTg5NjIxNDd9.5N5P5fJLGTLqCTD9LOcr9g-_Ul9a6dYbB1NqmSFqZNU\")",
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(for:*)",
      "Bash(do if [ -f \"backend/src/routes/$file.ts\" ])",
      "Bash(then ls -lh \"backend/src/routes/$file.ts\")",
      "Bash(fi)",
      "Bash(1)",
      "Bash(timeout 30s npm test -- src/routes/__tests__/teams.test.ts --testNamePattern=\"should accept pagination\" --testTimeout=5000)",
      "Bash(timeout 30s npm test:*)",
      "Bash(timeout 10 npm test -- --testPathPattern=\"teams.test\" --testNamePattern=\"should be able to import\" --no-coverage)",
      "Bash(sed:*)",
      "Bash(cut:*)"
    ],
    "deny": [],
    "ask": []
  }
}