{
  "includeCoAuthoredBy": false,
  "permissions": {
    "allow": [
      "Read(//c/Users/School/Desktop/SportsManager-js-to-ts/backend/**)",
      "Bash(npm test:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Read(//c/c/Users/School/Desktop/SportsManager-js-to-ts/backend/**)",
      "Bash(npx tsc:*)",
      "Read(//c/c/Users/School/Desktop/SportsManager-js-to-ts/**)",
      "Bash(cat:*)",
      "Bash(test:*)",
      "Bash(xargs ls:*)",
      "Bash(npm run build:*)",
      "Bash(node:*)",
      "Bash(npx ts-node:*)",
      "Bash(git rm:*)",
      "Bash(rm:*)",
      "Bash(for file in validation-schemas availability query-cache aiServices financialAIService budgetCalculationService)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(ls:*)",
      "Bash(done)",
      "Bash(grep:*)",
      "Bash(bash:*)",
      "Bash(xargs:*)",
      "Bash(find:*)",
      "Bash(npm run dev:*)",
      "Bash(npm install:*)",
      "Bash(while read file)",
      "Bash(do ts_file=\"$file%.js.ts\")",
      "Bash(if [ -f \"$ts_file\" ])",
      "Bash(then echo \"Removing duplicate: $file\")",
      "Bash(fi)",
      "Bash(mkdir:*)",
      "Bash(pkill:*)",
      "Bash(mv:*)",
      "Bash(DISABLE_REDIS=true node dist/server.js)",
      "Bash(tree:*)",
      "Bash(while read jsfile)",
      "Bash(do tsfile=\"$jsfile%.js.ts\")",
      "Bash(if [ -f \"$tsfile\" ])",
      "Bash(then echo \"Duplicate: $jsfile (has .ts version)\")",
      "Bash(npm start)",
      "Bash(for file in src/services/*.ts)",
      "Bash(do if ! grep -q \"^export default\" \"$file\")",
      "Bash(then echo \"$file needs default export\")",
      "Bash(DISABLE_REDIS=true npm start)",
      "Bash(npx cross-env:*)",
      "Bash(for file in compliance.ts performance.ts resources.ts workflows.ts)",
      "Bash(do sed -i \"/require.*\\.orig/d\" \"$file\")",
      "Bash(echo:*)",
      "Bash(curl:*)",
      "Bash(git mv:*)",
      "Bash(tasklist)",
      "Bash(npm run build:frontend:*)",
      "Bash(npx jest:*)",
      "Bash(while read test)",
      "Bash(do npx jest \"$test\" --no-coverage)",
      "Read(//c/Users/School/OneDrive/Desktop/SportsManager/.git/**)",
      "Bash(python:*)",
      "Bash(taskkill:*)",
      "Bash(netstat:*)",
      "Read(//c/Users/School/OneDrive/Desktop/**)"
    ],
    "deny": [],
    "ask": []
  }
}