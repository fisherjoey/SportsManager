---
apiVersion: api.cerbos.dev/v1
description: |-
  Page access control policy for Sports Manager application.
  Controls access to frontend pages based on user roles, permissions, and context.

  Page Categories:
  - Public pages: Accessible without authentication or with limited access
  - Admin pages: Require admin-level permissions
  - Financial pages: Require finance-related permissions and organization scoping
  - Core application pages: General authenticated access with role-specific features
  - Settings pages: User-specific or admin settings
  - Demo pages: Development/testing pages (production restrictions apply)
  - Resources pages: Content management with category-based permissions

resourcePolicy:
  version: "1.0"
  resource: "page"
  importDerivedRoles:
    - common_roles

  rules:
    # ============================================================================
    # PUBLIC PAGES - Accessible to all or unauthenticated users
    # ============================================================================

    - name: public-login-page
      actions: ['view', 'access']
      effect: EFFECT_ALLOW
      roles: ['*']
      condition:
        match:
          expr: request.resource.id == 'login'

    - name: public-complete-signup
      actions: ['view', 'access']
      effect: EFFECT_ALLOW
      roles: ['*']
      condition:
        match:
          all:
            of:
              - expr: request.resource.id == 'complete_signup'
              # Token validation handled by backend API
              - expr: request.resource.attr.hasValidToken == true

    # ============================================================================
    # DASHBOARD & HOME - Authenticated users
    # ============================================================================

    - name: authenticated-home
      actions: ['view', 'access']
      effect: EFFECT_ALLOW
      derivedRoles:
        - active_user
      condition:
        match:
          expr: request.resource.id == 'home'

    - name: authenticated-dashboard
      actions: ['view', 'access']
      effect: EFFECT_ALLOW
      derivedRoles:
        - active_user
      condition:
        match:
          expr: request.resource.id == 'dashboard'

    # ============================================================================
    # ADMIN PAGES - Super Admin and Admin only
    # ============================================================================

    - name: admin-audit-logs
      actions: ['view', 'access']
      effect: EFFECT_ALLOW
      roles:
        - admin
        - super_admin
      condition:
        match:
          expr: request.resource.id == 'admin_audit_logs'

    - name: admin-audit-logs-export
      actions: ['export']
      effect: EFFECT_ALLOW
      roles:
        - super_admin
      condition:
        match:
          expr: request.resource.id == 'admin_audit_logs'

    - name: admin-page-access
      actions: ['view', 'access', 'manage']
      effect: EFFECT_ALLOW
      roles:
        - admin
        - super_admin
      condition:
        match:
          all:
            of:
              - expr: request.resource.id == 'admin_page_access'
              - expr: "'roles:manage' in request.principal.attr.permissions"

    - name: admin-permissions
      actions: ['view', 'access']
      effect: EFFECT_ALLOW
      roles:
        - admin
        - super_admin
      condition:
        match:
          all:
            of:
              - expr: request.resource.id == 'admin_permissions'
              - expr: "'permissions:view' in request.principal.attr.permissions || 'permissions:manage' in request.principal.attr.permissions"

    - name: admin-permissions-manage
      actions: ['manage', 'update', 'delete']
      effect: EFFECT_ALLOW
      roles:
        - super_admin
      condition:
        match:
          all:
            of:
              - expr: request.resource.id == 'admin_permissions'
              - expr: "'permissions:manage' in request.principal.attr.permissions"

    - name: admin-notifications-broadcast
      actions: ['view', 'access']
      effect: EFFECT_ALLOW
      roles:
        - admin
        - super_admin
      condition:
        match:
          all:
            of:
              - expr: request.resource.id == 'admin_notifications_broadcast'
              - expr: "'notifications:broadcast' in request.principal.attr.permissions"

    - name: admin-notifications-broadcast-send
      actions: ['send', 'broadcast']
      effect: EFFECT_ALLOW
      roles:
        - admin
        - super_admin
      condition:
        match:
          all:
            of:
              - expr: request.resource.id == 'admin_notifications_broadcast'
              - expr: "'notifications:broadcast' in request.principal.attr.permissions"
              - expr: request.principal.attr.isActive == true

    # Generic admin pages (admin-settings, admin-users, admin-roles, etc.)
    - name: admin-pages-general
      actions: ['view', 'access']
      effect: EFFECT_ALLOW
      roles:
        - admin
        - super_admin
      condition:
        match:
          expr: request.resource.id.startsWith('admin_') || request.resource.id.startsWith('admin-')

    # ============================================================================
    # FINANCIAL PAGES - Finance permissions + organization scoping
    # ============================================================================

    - name: financial-dashboard-view
      actions: ['view', 'access']
      effect: EFFECT_ALLOW
      derivedRoles:
        - same_organization
      condition:
        match:
          all:
            of:
              - expr: request.resource.id == 'financial_dashboard'
              - expr: "'finance:view' in request.principal.attr.permissions || 'finance:dashboard' in request.principal.attr.permissions"
              - expr: request.principal.attr.isActive == true

    - name: financial-dashboard-admin
      actions: ['view', 'access', 'export', 'manage']
      effect: EFFECT_ALLOW
      roles:
        - admin
        - super_admin
      derivedRoles:
        - same_organization
      condition:
        match:
          expr: request.resource.id == 'financial_dashboard'

    - name: financial-budgets-view
      actions: ['view', 'access']
      effect: EFFECT_ALLOW
      derivedRoles:
        - same_organization
      condition:
        match:
          all:
            of:
              - expr: request.resource.id == 'financial_budgets'
              - expr: "'finance:view' in request.principal.attr.permissions"
              - expr: request.principal.attr.isActive == true

    - name: financial-budgets-edit
      actions: ['edit', 'update', 'manage']
      effect: EFFECT_ALLOW
      derivedRoles:
        - same_organization
      condition:
        match:
          all:
            of:
              - expr: request.resource.id == 'financial_budgets'
              - expr: "'finance:edit' in request.principal.attr.permissions || 'finance:manage' in request.principal.attr.permissions"
              - expr: request.principal.attr.isActive == true

    - name: budget-view
      actions: ['view', 'access']
      effect: EFFECT_ALLOW
      derivedRoles:
        - same_organization
      condition:
        match:
          all:
            of:
              - expr: request.resource.id == 'budget'
              - expr: "'finance:view' in request.principal.attr.permissions"
              - expr: request.principal.attr.isActive == true

    - name: budget-edit
      actions: ['edit', 'update', 'manage']
      effect: EFFECT_ALLOW
      derivedRoles:
        - same_organization
      condition:
        match:
          all:
            of:
              - expr: request.resource.id == 'budget'
              - expr: "'finance:edit' in request.principal.attr.permissions || 'finance:manage' in request.principal.attr.permissions"
              - expr: request.principal.attr.isActive == true

    - name: budget-admin-access
      actions: ['view', 'access', 'edit', 'update', 'manage', 'delete']
      effect: EFFECT_ALLOW
      roles:
        - admin
        - super_admin
      derivedRoles:
        - same_organization
      condition:
        match:
          expr: request.resource.id == 'budget'

    # ============================================================================
    # CORE APPLICATION PAGES - Authenticated users with role-based features
    # ============================================================================

    - name: games-view
      actions: ['view', 'access']
      effect: EFFECT_ALLOW
      derivedRoles:
        - active_user
      condition:
        match:
          expr: request.resource.id == 'games'

    - name: games-manage
      actions: ['manage', 'create', 'update', 'delete', 'assign']
      effect: EFFECT_ALLOW
      roles:
        - admin
        - super_admin
        - assignor
        - assignment_manager
      condition:
        match:
          all:
            of:
              - expr: request.resource.id == 'games'
              - expr: request.principal.attr.isActive == true

    - name: notifications-access
      actions: ['view', 'access']
      effect: EFFECT_ALLOW
      derivedRoles:
        - active_user
      condition:
        match:
          expr: request.resource.id == 'notifications'

    - name: resources-access
      actions: ['view', 'access']
      effect: EFFECT_ALLOW
      derivedRoles:
        - active_user
      condition:
        match:
          expr: request.resource.id == 'resources' || request.resource.id == 'resources_view'

    - name: resources-category-manage
      actions: ['view', 'access', 'manage']
      effect: EFFECT_ALLOW
      roles:
        - admin
        - super_admin
      condition:
        match:
          all:
            of:
              - expr: request.resource.id == 'resources_category_manage'
              - expr: request.principal.attr.isActive == true

    - name: resources-category-manager
      actions: ['view', 'access', 'manage']
      effect: EFFECT_ALLOW
      condition:
        match:
          all:
            of:
              - expr: request.resource.id == 'resources_category_manage'
              - expr: request.resource.attr.categoryManagerIds.exists(id, id == request.principal.id)
              - expr: request.principal.attr.isActive == true

    # ============================================================================
    # SETTINGS PAGES - User-specific settings
    # ============================================================================

    - name: settings-notifications-own
      actions: ['view', 'access', 'edit', 'update']
      effect: EFFECT_ALLOW
      derivedRoles:
        - active_user
      condition:
        match:
          expr: request.resource.id == 'settings_notifications'

    - name: settings-admin
      actions: ['view', 'access', 'manage']
      effect: EFFECT_ALLOW
      roles:
        - admin
        - super_admin
      condition:
        match:
          expr: request.resource.id.startsWith('settings_')

    # ============================================================================
    # DEMO PAGES - Development and testing (restrict in production)
    # ============================================================================

    - name: theme-demo-dev
      actions: ['view', 'access']
      effect: EFFECT_ALLOW
      roles:
        - admin
        - super_admin
      condition:
        match:
          all:
            of:
              - expr: request.resource.id == 'theme_demo'
              - expr: request.resource.attr.environment != 'production'

    - name: theme-demo-production
      actions: ['view', 'access']
      effect: EFFECT_DENY
      roles: ['*']
      condition:
        match:
          all:
            of:
              - expr: request.resource.id == 'theme_demo'
              - expr: request.resource.attr.environment == 'production'

    - name: demo-ai-assignments-dev
      actions: ['view', 'access']
      effect: EFFECT_ALLOW
      roles:
        - admin
        - super_admin
      condition:
        match:
          all:
            of:
              - expr: request.resource.id == 'demo_ai_assignments'
              - expr: request.resource.attr.environment != 'production'

    - name: demo-ai-assignments-authenticated
      actions: ['view', 'access']
      effect: EFFECT_ALLOW
      derivedRoles:
        - active_user
      condition:
        match:
          all:
            of:
              - expr: request.resource.id == 'demo_ai_assignments'
              - expr: request.resource.attr.environment != 'production'

    - name: demo-ai-assignments-production
      actions: ['view', 'access']
      effect: EFFECT_DENY
      roles: ['*']
      condition:
        match:
          all:
            of:
              - expr: request.resource.id == 'demo_ai_assignments'
              - expr: request.resource.attr.environment == 'production'

    # ============================================================================
    # FALLBACK & SPECIAL CASES
    # ============================================================================

    # Super Admin has access to all pages by default
    - name: super-admin-all-access
      actions: ['view', 'access', 'manage', 'edit', 'update', 'delete', 'export']
      effect: EFFECT_ALLOW
      roles:
        - super_admin
      condition:
        match:
          expr: request.principal.attr.isActive == true

  # ============================================================================
  # AUDIT RULES - Log access to sensitive pages
  # ============================================================================

  auditInfo:
    # Log all admin page access attempts
    - name: audit-admin-pages
      actions:
        - view
        - access
        - manage
      condition:
        match:
          expr: request.resource.id.startsWith('admin_') || request.resource.id.startsWith('admin-')

    # Log all financial page access
    - name: audit-financial-pages
      actions:
        - view
        - access
        - export
      condition:
        match:
          expr: request.resource.id.startsWith('financial') || request.resource.id == 'budget'

    # Log broadcast notification page access
    - name: audit-broadcast-notifications
      actions:
        - view
        - access
        - send
        - broadcast
      condition:
        match:
          expr: request.resource.id == 'admin_notifications_broadcast'

    # Log audit log page access (meta-audit)
    - name: audit-audit-logs-access
      actions:
        - view
        - access
        - export
      condition:
        match:
          expr: request.resource.id == 'admin_audit_logs'
